import json
import sqlite3

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ JSON —Ñ–∞–π–ª—É
DB_PATH = 'c:/Users/maksi/Documents/GitHub/fast_api_media_platform/media_platform.db'
JSON_PATH = 'c:/Users/maksi/Documents/GitHub/fast_api_media_platform/zametki/musicians.json'

# –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
REQUIRED_FIELDS = ['name_music', 'file_name', 'file_path', 'category_id', 'genre_id']

def validate_record(record):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∑–∞–ø–∏—Å—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è —Å –Ω–µ–ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –∫—Ä–æ–º–µ file_name."""
    for field in REQUIRED_FIELDS:
        if field == 'file_name' and not record.get(field):
            record['file_name'] = 'default_file_name.mp3'  # –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        elif not record.get(field):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏ –Ω–µ–ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            print(f"–ü—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ–ª–µ {field} –≤ –∑–∞–ø–∏—Å–∏: {record}")
            return False
    return True

def load_data_to_db():
    # –ß—Ç–µ–Ω–∏–µ JSON —Ñ–∞–π–ª–∞
    try:
        with open(JSON_PATH, 'r', encoding='utf-8') as f:
            musicians_data = json.load(f)
    except FileNotFoundError:
        print(f"–§–∞–π–ª JSON –Ω–µ –Ω–∞–π–¥–µ–Ω: {JSON_PATH}")
        return
    except json.JSONDecodeError:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ JSON —Ñ–∞–π–ª–∞.")
        return

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    insert_query = """
    INSERT INTO media_files (id, name_music, description, file_name, file_path, cover_image_path, 
                             category_id, genre_id, youtube_url, rutube_url, plvideo_url) 
    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    """

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
    for record in musicians_data:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–∏
        if not validate_record(record):
            print(f"–ü—Ä–æ–ø—É—Å–∫ –∑–∞–ø–∏—Å–∏ –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π: {record}")
            continue

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
        data_tuple = (
            record.get('id'),
            record.get('name_music'),
            record.get('description', ''),  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            record['file_name'],
            record['file_path'],
            record.get('cover_image_path', ''),
            record['category_id'],
            record['genre_id'],
            record.get('youtube_url', ''),
            record.get('rutube_url', ''),
            record.get('plvideo_url', '')
        )

        # –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        try:
            cursor.execute(insert_query, data_tuple)
        except sqlite3.IntegrityError as e:
            print(f"–û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e} –¥–ª—è –∑–∞–ø–∏—Å–∏ {record}")
            continue

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    conn.commit()
    conn.close()
    print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")

# –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
load_data_to_db()

'''
üìî –ê–≤—Ç–æ—Ä: –î—É–ø–ª–µ–π –ú–∞–∫—Å–∏–º –ò–≥–æ—Ä–µ–≤–∏—á | Dupley Maxim Igorevich
üì≤ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7-915-048-02-49
üìÖ –î–∞—Ç–∞: 19.10.2024
'''
